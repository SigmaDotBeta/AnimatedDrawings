import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JFrame;

public class Canvas extends javax.swing.JFrame
{
  private final int MAXFIG = 1000;
  
  private GeometricFigure[] arr = new GeometricFigure[MAXFIG];
  private int num = 0;

  // last mouse click position
  int MouseClickX = -1;
  int MouseClickY = -1;

  // current mouse position
  int MousePositionX = 0;
  int MousePositionY = 0;

  // keyboard button pressed
  boolean KeyboardRight = false;
  boolean KeyboardLeft = false;
  boolean KeyboardUp = false;
  boolean KeyboardDown = false;
  boolean KeyboardSpace = false;

  int KeyboardPressed = 0;

  public Canvas()
  {
    initComponents();

    int framex = 200;
    int framey = 100;
    int framew = 700;
    int frameh = 500;
    
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    setBounds(framex, framey, framew, frameh);
  }

  public void AddFigure(GeometricFigure o)
  {
    if (num < MAXFIG - 1)
    {
      arr[num] = o;
      num++;

      o.frame = this;
    }
  }

  @Override
  public void paint(Graphics g)
  {
    Dimension d = this.getSize();

    Image buffer = new BufferedImage(d.width, d.height, BufferedImage.TYPE_INT_RGB);

    Graphics screengc = g;

    g = buffer.getGraphics();

    super.paint(g);

    //--------------

    int i;

    for (i = 0; i < num; i++)
    {
      arr[i].DrawFigure(g);
    }

    //--------------

    screengc.drawImage(buffer, 0, 0, null);
  }

  public void StartAnimation()
  {
    //--------------

    KeyControl k = new KeyControl();

    k.frame = this;

    this.addKeyListener(k);

    //--------------
    
    MouseControl m = new MouseControl();

    m.frame = this;

    this.addMouseListener(m);
    this.addMouseMotionListener(m);

    //--------------

    RepeatTask rip = new RepeatTask();
    Timer tim = new Timer();
    tim.schedule(rip, 0, 100);

    //--------------
  }

  class RepeatTask extends TimerTask
  {

    @Override
    public void run()
    {
      int i;

      for (i = 0; i < num; i++)
      {
        arr[i].UpdateFigure();
      }

      repaint();
    }
  }


  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 300, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(Canvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(Canvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(Canvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(Canvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run()
      {
        new Canvas().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
}
